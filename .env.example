# =============================================================================
# PeerDev Backend Environment Configuration
# =============================================================================
# Copy this file to .env and update the values according to your environment
# Never commit .env files to version control!

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Database host (use 127.0.0.1 for local development)
DB_HOST=127.0.0.1

# Database port (default MySQL port is 3306, Docker Compose uses 3307)
DB_PORT=3307

# Database username
DB_USER=

# Database password (use a strong password in production)
DB_PASSWORD=

# Database name
DB_NAME=

# Database connection pool settings (optional)
DB_CONNECTION_LIMIT=10
DB_ACQUIRE_TIMEOUT=60000
DB_TIMEOUT=60000

# =============================================================================
# JWT AUTHENTICATION CONFIGURATION
# =============================================================================

# JWT secret key for signing tokens (MUST be changed in production)
# Generate a strong secret: openssl rand -base64 64
JWT_SECRET=your_super_secret_jwt_key_change_this_in_production

# JWT token expiration time (examples: 15m, 1h, 4h, 1d, 7d)
JWT_EXPIRE=4h

# JWT refresh token secret (should be different from JWT_SECRET)
JWT_REFRESH_SECRET=your_refresh_token_secret_change_this_in_production

# JWT refresh token expiration time
JWT_REFRESH_EXPIRE=7d

# JWT issuer (optional)
JWT_ISSUER=peerdev-api

# JWT audience (optional)
JWT_AUDIENCE=peerdev-users

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server port (default: 5000)
PORT=5000

# Node environment (development, production, test)
NODE_ENV=development

# API version prefix
API_VERSION=v1

# CORS origins (comma-separated list for multiple origins)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# Request rate limiting (requests per window)
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW_MS=900000

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Bcrypt salt rounds for password hashing (10-12 recommended)
BCRYPT_SALT_ROUNDS=10

# Session secret for express-session (if using sessions)
SESSION_SECRET=your_session_secret_change_this_in_production

# Cookie settings
COOKIE_SECURE=false
COOKIE_HTTP_ONLY=true
COOKIE_SAME_SITE=strict

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Log format (json, simple)
LOG_FORMAT=simple

# Log file path (optional, logs to console if not set)
LOG_FILE_PATH=./logs/app.log

# Enable request logging
LOG_REQUESTS=true

# =============================================================================
# EMAIL CONFIGURATION (for future features)
# =============================================================================

# SMTP configuration for sending emails
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# Email sender information
EMAIL_FROM=noreply@peerdev.com
EMAIL_FROM_NAME=PeerDev Platform

# =============================================================================
# REDIS CONFIGURATION (for caching, if implemented)
# =============================================================================

# Redis connection settings
REDIS_HOST=127.0.0.1
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Redis session store (if using Redis for sessions)
REDIS_SESSION_PREFIX=peerdev:sess:

# =============================================================================
# FILE UPLOAD CONFIGURATION (for future features)
# =============================================================================

# Maximum file size for uploads (in bytes)
MAX_FILE_SIZE=5242880

# Allowed file types (comma-separated)
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,application/pdf

# Upload directory
UPLOAD_DIR=./uploads

# =============================================================================
# EXTERNAL API CONFIGURATION (for future integrations)
# =============================================================================

# GitHub OAuth (for GitHub integration)
GITHUB_CLIENT_ID=your_github_client_id
GITHUB_CLIENT_SECRET=your_github_client_secret

# Google OAuth (for Google Sign-In)
GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret

# =============================================================================
# MONITORING AND ANALYTICS (for future features)
# =============================================================================

# Application monitoring
SENTRY_DSN=your_sentry_dsn_url

# Analytics
GOOGLE_ANALYTICS_ID=your_ga_tracking_id

# Health check endpoint settings
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Enable debug mode (additional logging and error details)
DEBUG=false

# Enable API documentation (Swagger UI)
ENABLE_DOCS=true

# API documentation path
DOCS_PATH=/api-docs

# Enable request/response logging in development
ENABLE_REQUEST_LOGGING=true

# Database query logging
DB_LOGGING=false

# =============================================================================
# PRODUCTION SETTINGS
# =============================================================================

# Trust proxy (set to true if behind a reverse proxy like nginx)
TRUST_PROXY=false

# Helmet security headers configuration
HELMET_ENABLED=true

# Content Security Policy
CSP_ENABLED=false

# HTTPS redirect (set to true in production with HTTPS)
FORCE_HTTPS=false

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================

# Test database settings (used during testing)
TEST_DB_HOST=127.0.0.1
TEST_DB_PORT=3307
TEST_DB_USER=testuser
TEST_DB_PASSWORD=testpass
TEST_DB_NAME=peerdev_test

# Test JWT secret (different from production)
TEST_JWT_SECRET=test_jwt_secret_for_testing_only

# =============================================================================
# FEATURE FLAGS (for gradual feature rollout)
# =============================================================================

# Enable new features
FEATURE_USER_PROFILES=true
FEATURE_MESSAGING=false
FEATURE_VIDEO_CALLS=false
FEATURE_CODE_SHARING=true

# =============================================================================
# NOTES
# =============================================================================
# 
# 1. Always use strong, unique passwords and secrets in production
# 2. Never commit .env files to version control
# 3. Use environment-specific values for different deployment stages
# 4. Regularly rotate secrets and API keys
# 5. Use a secrets management service in production environments
# 6. Validate all environment variables at application startup
# 7. Document any new environment variables added to the application
#
# =============================================================================
